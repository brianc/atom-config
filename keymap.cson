# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#_customizing_keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
'atom-text-editor':
  'ctrl-w v': 'pane:split-left-and-copy-active-item'
  'ctrl-w o': 'close-other-panes:close-other-panes'
  'ctrl-l': 'window:focus-pane-on-right'
  'ctrl-h': 'window:focus-pane-on-left'
  'ctrl-w': '!unset'
  'ctrl-o': '!unset'
  ', f': 'fuzzy-finder:toggle-file-finder'

'.tool-panel.panel-left, .tool-panel.panel-right':
  'ctrl-c': 'tool-panel:unfocus'

'atom-text-editor.autocomplete-active':
  'ctrl-c': 'autocomplete-plus:cancel'

'.fuzzy-finder atom-text-editor[mini]':
  'ctrl-j': 'core:move-down'
  'ctrl-k': 'core:move-up'

'body':
  'ctrl-c': 'core:cancel'

'atom-workspace':
  ', t': 'recent-files-fuzzy-finder:toggle-finder'
